name: Update README

on:
  schedule:
    - cron: '0 0/4 * * *'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    name: Update this repo's README with recent activity

    steps:
      - name: Report Start Reason and Metadata
        run: |
          echo "Starter is: ${{ github.actor }};"
          echo "Repo is: ${{ github.repository }};"
          echo "Trigger is: ${{ github.eventname }};"
          echo "Job is: ${{ github.job }};"
          echo "Job id is: ${{ github.run_id }};"
      - name: Checkout
        uses: actions/checkout@v2
      - name: Load Recent Acivities
        uses: jamesgeorge007/github-activity-readme@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          COMMIT_MSG: 'Update my README via GitHub Actions'
          MAX_LINES: 10
      - name: Generate the Snake
        uses: Platane/snk@master
        id: snake-gif
        with: 
          github_user_name: Guleixibian2009
          svg_out_path: ./dist/github-snake.svg
      - name: Push to GitHub
        uses: endbug/add-and-commit@v7.2.1
        with:
          branch: master
          message: 'Daily Generate Snake' 
      - name: Report job status
        id: report
        run: |
          echo "Status: ${{ job.status }}"
          echo "::set-output name=status::${{ job.status }}"
    outputs: 
      build_status: ${{ steps.report.outputs.status }} 
  
  getData:
    runs-on: ubuntu-latest
    name: Get Metadata
    needs: build
    
    steps:
      - name: Get Data
        id: metadata
        run: |
          current=`date "+%Y-%m-%d"`
          currentTimestamp=$((`date -d "$current" +%s`))
          originTimestamp=$((`date -d "2022-04-27" +%s`))
          timegap=$(($(($(( $currentTimestamp - $originTimestamp )) / 86400000 )) + 1 ))
          output="Today is ${current}, day ${timegap}. Todays build status is ${{ needs.build.outputs.build_status }}! Keep working hard, @Guleixibian2009!"
          echo "::set-output name=message::${output}"
    outputs:
      message: ${{ steps.metadata.outputs.message }}

  record:
    runs-on: ubuntu-latest
    name: Record to issue
    needs: getData

    steps:    
      - name: Checkout
        uses: actions/checkout@v2.4.2
      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "noreply@github.com"
      - name: Write to issue
        uses: AlexRogalskiy/github-action-issue-commenter@v2.0.1
        with:
          GITHUB_TOKEN: ${{ secrets.METRICS_TOKEN }}
          requestId: 2
          message: ${{ needs.getData.outputs.message }}

  #email:
    #runs-on: ubuntu-latest
    #name: Email message
    #needs: getData
    
    #steps:
    #  - name: Send me an email
    #    uses: cinotify/github-action@v1.1.0
    #    with:
    #      to: guleixibian2009@outlook.com
    #      subject: Daily Update Status
    #      body: "Build Status Report:\n${{ needs.getData.outputs.message }}\nThis email is sent via GitHub Actions."
