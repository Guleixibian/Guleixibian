name: Update README

on:
  schedule:
    - cron: '0/60 * * * *'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    name: Update this repo's README with recent activity

    steps:
      - name: Report Start Reason and Metadata
        id: meta
        run: |
          echo "Starter is: ${{ github.actor }};"
          echo "Repo is: ${{ github.repository }};"
          echo "Trigger is: ${{ github.event_name }};"
          echo "Job is: ${{ github.job }};"
          echo "Job id is: ${{ github.run_id }};"
          echo "::set-output name=trigger::${{ github.event_name }}"
          
      - name: Checkout
        uses: actions/checkout@v2
      - name: Load Recent Acivities
        uses: jamesgeorge007/github-activity-readme@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          COMMIT_MSG: 'Update my README via GitHub Actions'
          MAX_LINES: 10
      - name: Generate the Snake
        uses: Platane/snk@master
        id: snake-gif
        with: 
          github_user_name: Guleixibian2009
          svg_out_path: ./dist/github-snake.svg
      - name: Push to GitHub
        uses: endbug/add-and-commit@v7.2.1
        with:
          branch: master
          message: 'Daily Generate Snake' 
      - name: Report job status
        id: report
        run: |
          echo "Status: ${{ job.status }}"
          echo "::set-output name=status::${{ job.status }}"
    outputs: 
      build_status: ${{ steps.report.outputs.status }} 
      trigger: ${{ steps.meta.outputs.trigger }}
  
  getData:
    runs-on: ubuntu-latest
    name: Get Metadata
    needs: build
    
    steps:
      - name: Get Data
        id: metadata
        run: |
          trigger=${{ needs.build.outputs.trigger }}
          current=`date "+%Y-%m-%d"`
          currentTimestamp=$((`date -d "$current" +%s`))
          originTimestamp=$((`date -d "2022-04-27" +%s`))
          timegap=$(($(($(( $currentTimestamp - $originTimestamp )) / 86400000 )) + 1 ))
          output="Today is ${current}, day ${timegap}. Todays build status is ${{ needs.build.outputs.build_status }}! Update trigger is ${trigger}. Keep working hard, @Guleixibian2009!"
          echo "::set-output name=message::${output}"
      - name: Get Sentence
        id: daily
        run: |
          sudo apt-get install jq
          sentence=`curl https://api.uixsj.cn/hitokoto/get?type=en"&"code=json | jq '. ["content"]'`
          echo "::set-output name=daily::${sentence}"
          echo $sentence
    outputs:
      message: ${{ steps.metadata.outputs.message }}
      daily: ${{ steps.metadata.outputs.daily }}

  record:
    runs-on: ubuntu-latest
    name: Record to issue
    needs: getData

    steps: 
      - run: |
          echo ${{ needs.getData.outputs.daily }}
      - name: Create or Update Comment
        uses: peter-evans/create-or-update-comment@v2.0.0
        with:
          issue-number: 2
          body: |
            # Build Status Report :zap:
            ${{ env.Message }}  
            ***
            # Today's Hitokoto :book:
            ${{ env.Daily }}
            *This comment is automated via [GitHub Actions](https://Guleixibian2009/Guleixibian2009/actions/)*
        env:
          Message: ${{ needs.getData.outputs.message }}  
          Daily: ${{ needs.getData.outputs.daily }}
